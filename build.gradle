group 'com.frostwolf'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'kotlin'

buildscript {
    ext.kotlin_version = '1.0.1-1'
    ext.spring_boot_version = '1.3.3.RELEASE'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath("org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_version")
    }
}
sourceSets {
    main.java.srcDirs += 'src/main/kotlin'
}

ext {
    log4j_version = '2.5'
    guava_version = '19.0'
    netty_version = '4.1.0.CR7'
    protobuf_version = '2.6.1'
    protostuff_version = '1.4.0'
    typetools_version = '0.4.4'
    reflections_version = '0.9.10'
    commons_lang_version = '3.4'
    validator_collection_version = '2.1.6'
    jackson_version = '2.7.2'
    mongo_version = '3.2.2'
    disruptor_version = '3.3.4'
    gs_collections_version = '7.0.3'
}

ext {
    kotlin = [
            "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version",
            "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    ]
    netty = [
            "io.netty:netty-all:$netty_version",
            "io.netty:netty-transport-native-epoll:$netty_version"
    ]
    spring_boot = [
            "org.springframework.boot:spring-boot-starter",
            "org.springframework.boot:spring-boot-starter-log4j2",
            "org.springframework.boot:spring-boot-configuration-processor"
    ]
    mongodb = [
            "org.springframework.boot:spring-boot-starter-data-mongodb",
            "org.mongodb:mongo-java-driver"
    ]
    validator = [
            "org.hibernate:hibernate-validator",
            "org.hibernate:hibernate-validator-annotation-processor",
            "cz.jirutka.validator:validator-collection:$validator_collection_version"
    ]
    jackson = [
            "com.fasterxml.jackson.core:jackson-core:$jackson_version",
            "com.fasterxml.jackson.core:jackson-databind:$jackson_version",
            "com.fasterxml.jackson.core:jackson-annotations:$jackson_version",
            "com.fasterxml.jackson.datatype:jackson-datatype-guava:$jackson_version",
            "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:$jackson_version",
            "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jackson_version",
            "com.fasterxml.jackson.module:jackson-module-kotlin:$jackson_version"
    ]
    apache_commons = [
            "org.apache.commons:commons-lang3:$commons_lang_version"
    ]
    reflections = "org.reflections:reflections:$reflections_version"
    typetools = "net.jodah:typetools:$typetools_version"
    guava = "com.google.guava:guava:$guava_version"
    protobuf = "com.google.protobuf:protobuf-java:$protobuf_version"
    protostuff = [
            "io.protostuff:protostuff-core:$protostuff_version",
            "io.protostuff:protostuff-runtime:$protostuff_version"
    ]
    disruptor = "com.lmax:disruptor:$disruptor_version"
    gs_collections = [
            "com.goldmansachs:gs-collections-api:$gs_collections_version",
            "com.goldmansachs:gs-collections:$gs_collections_version",
            "com.goldmansachs:gs-collections-forkjoin:$gs_collections_version"
    ]
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'kotlin'
    apply plugin: 'spring-boot'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        mavenCentral()
    }

    dependencies {
        testCompile "junit:junit"
        compile kotlin
        compile spring_boot
        compile guava
        compile apache_commons
        compile reflections
        compile jackson
        compile disruptor
        compile gs_collections
    }
    configurations {
        all*.exclude group: "ch.qos.logback"
        all*.exclude module: "spring-boot-starter-logging"
        all*.exclude group: "org.json"
    }
    compileJava.dependsOn(processResources)
}
